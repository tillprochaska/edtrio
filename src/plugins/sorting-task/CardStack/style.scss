.st-card-stack {
    position: relative;
}

.st-card-stack__card {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    visibility: hidden;
    transition: transform .75s, opacity .5s;
}

.st-card-stack__card:last-child {
    // Make sure that the card stack has
    // the same dimensions as the cards
    position: relative;
}

.st-card-stack__card--hidden {
    z-index: 5;
    visibility: visible;
    opacity: 0;
    // TODO: use (-70deg) for unknown items
    transform: rotate(70deg);
    transform-origin: 50% 100vh;
}

// What follows is a really hacky way to create
// the visual effect of stacked cards. Each of
// the selectors matches the 1st, 2nd, 3rd or
// 4th visible card, respectiveley. As browsers
// currently do not have support for the `nth-match()`
// pseudoselector (or anything comparable) this
// is the only way to target the nth element
// with a specific class.
.st-card-stack__card--visible {
    z-index: 4;
    visibility: visible;
}

.st-card-stack__card--visible ~ .st-card-stack__card--visible {
    z-index: 3;
    transform: translate(.25rem, .25rem);
}

.st-card-stack__card--visible ~ .st-card-stack__card--visible ~ .st-card-stack__card--visible {
    z-index: 2;
    transform: translate(2 * .25rem, 2 * .25rem);
}

.st-card-stack__card--visible ~ .st-card-stack__card--visible ~ .st-card-stack__card--visible ~ .st-card-stack__card--visible {
    z-index: 1;
    transform: translate(3 * .25rem, 3 * .25rem);
}